generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// attribute @id
// another attribute @default

model User {
  id             Int             @id @default(autoincrement())
  name           String
  age            Int
  email          String[]        @unique
  isAdmin        Boolean?        @default(false)
  hugeNumber     BigInt?
  likedPosts     Post[]
  userPreference UserPreference?

  @@unique([name, age]) // users can have the same name but different ages and they can have same agges and different names but they must not have the same name and the same age
  @@index([email]) // creates an index on the `email` column
}

model Post {
  id         String     @id @default(cuid())
  title      String
  content    String     @default("")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt // @updatedAt automatically sets this field to the current timestamp whenever `Post` is updated
  likedBy    User[]
  likedByIds Int[]
  categories Category[]
}

model Category {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[]
}

model Recipe {
  id             String   @id @default(cuid())
  title          String
  timeToCookMins Int
  description    String
  updatedAt      DateTime @default(now())
  isVegan        Boolean
}

model UserPreference {
  id                 String  @id @default(uuid())
  emailNotifications Boolean
  user               User    @relation(fields: [userId], references: [id])
  userId             Int     @unique
}
